{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/main/components/map/map.component.ts","webpack:///src/app/pages/main/components/map/map.component.html","webpack:///src/app/pages/main/components/sidenav/sidenav.component.ts","webpack:///src/app/pages/main/components/sidenav/sidenav.component.html","webpack:///src/app/pages/main/main.component.ts","webpack:///src/app/pages/main/main.component.html","webpack:///src/app/pages/main/main.module.ts","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/services/community.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","AppModule","declarations","imports","providers","bootstrap","MapComponent","community","markers","zoom","options","zoomControl","scrollwheel","disableDoubleClickZoom","maxZoom","minZoom","addCommunities","navigator","geolocation","getCurrentPosition","coords","center","lat","latitude","lng","longitude","communities","Object","entries","name","push","position","title","icon","url","scaledSize","height","width","marker","getTitle","emit","styleUrls","SidenavComponent","colspan","MainComponent","communityService","communities$","optionsGrid","cols","map","sidenav","components","MainModule","PagesModule","FooterComponent","HeaderComponent","CommunityService","httpClient","JSON_COMMUNITIES","get","providedIn","MaterialModules","SharedModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n","<ngcommunity-header></ngcommunity-header>\n<ngcommunity-main></ngcommunity-main>\n<ngcommunity-footer></ngcommunity-footer>\n","import { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { PagesModule } from './pages/pages.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, SharedModule, PagesModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMap, MapMarker } from '@angular/google-maps';\n\nimport { Communities } from '@shared/interfaces/communities.interface';\n\n@Component({\n  selector: 'ngcommunity-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements OnInit, OnChanges {\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\n  @Output() community: EventEmitter<any> = new EventEmitter();\n  @Input() communities: Communities;\n\n  markers: any[] = [];\n  zoom = 11;\n  center: google.maps.LatLngLiteral;\n  options: google.maps.MapOptions = {\n    zoomControl: false,\n    scrollwheel: true,\n    disableDoubleClickZoom: true,\n    maxZoom: 15,\n    minZoom: 4,\n  };\n\n  ngOnChanges(): void {\n    this.addCommunities();\n  }\n\n  ngOnInit() {\n    navigator.geolocation.getCurrentPosition(({ coords }) => {\n      this.center = {\n        lat: coords.latitude,\n        lng: coords.longitude,\n      };\n    });\n  }\n  zoomIn() {\n    if (this.zoom < this.options.maxZoom) {\n      this.zoom++;\n    }\n  }\n\n  zoomOut() {\n    if (this.zoom > this.options.minZoom) {\n      this.zoom--;\n    }\n  }\n\n  addCommunities() {\n    const communities = Object.entries(this.communities);\n    for (const [name, community] of communities) {\n      this.markers.push({\n        position: community.position,\n        title: name,\n        options: {\n          icon: {\n            url: `assets/images/${community.id}.png`,\n            scaledSize: { height: 48, width: 48 },\n          },\n        },\n      });\n    }\n  }\n\n  openInfo(marker: MapMarker) {\n    const community = this.communities[marker.getTitle()];\n    this.community.emit(community);\n  }\n}\n","<google-map\n  height=\"100%\"\n  width=\"100%\"\n  [center]=\"center\"\n  [options]=\"options\"\n  [zoom]=\"zoom\"\n>\n  <map-marker\n    #markerElem\n    *ngFor=\"let marker of markers\"\n    [position]=\"marker.position\"\n    [label]=\"marker.label\"\n    [title]=\"marker.title\"\n    [options]=\"marker.options\"\n    (mapClick)=\"openInfo(markerElem)\"\n  >\n  </map-marker>\n</google-map>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { Community } from '@shared/interfaces/communities.interface';\n\n@Component({\n  selector: 'ngcommunity-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent implements OnInit {\n  @Input() community: Community;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<aside class=\"profile-card\">\n  <ng-container *ngIf=\"community; else default\">\n    <header>\n      <a href=\"{{ community.web }}\" target=\"_blank\">\n        <img src=\"assets/images/{{ community.id }}.png\" />\n      </a>\n      <h1>{{ community.name }}</h1>\n    </header>\n    <div class=\"profile-bio\">\n      <p>Organizers</p>\n      <p *ngFor=\"let organizer of community.organizers\">\n        {{ organizer.name }} -\n        <a\n          class=\"profile-social-links\"\n          *ngIf=\"organizer.twitter\"\n          href=\"{{ organizer.twitter }}\"\n          target=\"_blank\"\n        >\n          <img\n            src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/social-twitter.svg\"\n          />\n        </a>\n      </p>\n    </div>\n    <ul class=\"profile-social-links\">\n      <li>\n        <a href=\"{{ community.twitter }}\" target=\"_blank\">\n          <img\n            src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/social-twitter.svg\"\n          />\n        </a>\n      </li>\n      <li>\n        <a href=\"{{ community.web }}\" target=\"_blank\">\n          <img\n            src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/social-codepen.svg\"\n          />\n        </a>\n      </li>\n    </ul>\n  </ng-container>\n  <ng-template #default>\n    <h1>Communities</h1>\n    <h4>Search Communities</h4>\n  </ng-template>\n</aside>\n","import { Community } from '@shared/interfaces/communities.interface';\nimport { CommunityService } from '@shared/services/community.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngcommunity-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  community: Community;\n  communities$ = this.communityService.communities;\n  optionsGrid = {\n    cols: 4,\n    map: {\n      colspan: 4\n    },\n    sidenav: {\n      colspan: 0\n    }\n  };\n\n  constructor(private communityService: CommunityService) {\n    this.communities$ = this.communityService.communities;\n  }\n\n  onSelectCommunity(community: Community) {\n    this.community = community;\n    this.optionsGrid.map.colspan = 3;\n    this.optionsGrid.sidenav.colspan = 1;\n  }\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"100%\">\n  <mat-grid-tile colspan=\"{{ optionsGrid.map.colspan }}\">\n    <ngcommunity-map\n      *ngIf=\"communities$ | async as communities\"\n      [communities]=\"communities\"\n      (community)=\"onSelectCommunity($event)\"\n    ></ngcommunity-map>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"{{ optionsGrid.sidenav.colspan }}\" *ngIf=\"community\">\n    <ngcommunity-sidenav [community]=\"community\"></ngcommunity-sidenav>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { GoogleMapsModule } from '@angular/google-maps';\nimport { MainComponent } from './main.component';\nimport { MapComponent } from './components/map/map.component';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\n\nconst components = [MainComponent, MapComponent, SidenavComponent];\n\n@NgModule({\n  declarations: [...components, SidenavComponent],\n  imports: [SharedModule, GoogleMapsModule],\n  providers: [],\n  exports: [...components],\n})\nexport class MainModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { MainModule } from './main/main.module';\n\n@NgModule({\n  declarations: [],\n  imports: [SharedModule, MainModule],\n  providers: [],\n  exports: [MainModule]\n})\nexport class PagesModule {}\n","import { OnInit, Component } from '@angular/core';\n\n@Component({\n  selector: 'ngcommunity-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  ngOnInit() {}\n}\n","<footer>\n  <mat-toolbar color=\"light\" class=\"footer\">\n    <mat-toolbar-row>\n      <span class=\"text-right\">ANGULAR COMMUNITIES </span>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngcommunity-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  ngOnInit() {}\n}\n","<mat-toolbar class=\"main-header\" color=\"accent\">\n  <mat-toolbar-row class=\"main-header-container\">\n    <button mat-icon-button class=\"burger-menu\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>ANGULAR COMMUNITIES</span>\n    <span class=\"menu-spacer\"></span>\n    <span class=\"fill-space\"></span>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Communities } from '@shared/interfaces/communities.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommunityService {\n  JSON_COMMUNITIES = 'assets/json/communities.json';\n\n  constructor(private httpClient: HttpClient) {}\n\n  get communities(): Observable<Communities> {\n    return this.httpClient.get<Communities>(this.JSON_COMMUNITIES);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgModule } from '@angular/core';\n\nconst components = [FooterComponent, HeaderComponent];\n\nconst MaterialModules = [\n  MatInputModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatIconModule,\n  MatCardModule,\n  MatToolbarModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatPaginatorModule,\n  MatGridListModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [...MaterialModules, CommonModule],\n  providers: [],\n  exports: [...components, ...MaterialModules, CommonModule],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}